# .aliases
# vim:ft=sh:
# called by .bashrc and .profile

if ls --color=always -d . >/dev/null 2>&1; then
  alias ls='/bin/ls --color=always'
elif ls -G -d . >/dev/null 2>&1; then # colorls is main system ls already
  alias ls='/bin/ls -G'
elif colorls -G -d . >/dev/null 2>&1; then
  alias ls='/usr/local/bin/colorls -G'
else # Solaris or other *NIX
  alias ls='/bin/ls'
fi

if [ -r /etc/aliases.sh ]; then
  source /etc/aliases.sh
fi

alias ll='ls -AalFh'
alias l='~/dotfiles/l -AF'
#alias rm='movetrash'
alias key='man -k'
alias info='info --vi-keys'
alias cycapache='/usr/bin/sudo /usr/bin/pkill -SIGQUIT -U www; /bin/sleep 2; /usr/bin/sudo /usr/sbin/apachectl start'

# search development scripts
jsgrep() {
  find . \( -name "*.dev.js" -print \)  | xargs grep -n "$1"
}

# search development css files
cssgrep() {
  find . \( -name "*.dev.css" -print \)  | xargs grep -n "$1"
}

# search php files
phpgrep() {
  find . \( -name "*.php" -print \)  | xargs grep -n "$1"
}

# search php files and development scripts/styles
wpgrep() {
  find . \( -name "*.php" -print -or -name "*.dev.js" -or -name "*.dev.css" -print \)  | xargs grep -n "$1"
}

# Shortcuts for opening WP files insanely fast.
wpinc(){
  vim wp-includes/$1.php
}

wpa(){
  vim wp-admin/$1.php
}

wpai(){
  vim wp-admin/includes/$1.php
}

wpcss(){
  vim wp-admin/css/$1.dev.css
}

wpjs(){
  vim wp-admin/js/$1.dev.js
}

wptt(){
  vim wp-content/themes/twentythirteen/$1.*
}

# Apply a Trac patch.
trac_patch() {
  curl "$1?format=raw" | patch -p0
}
# Apply a Trac patch on a clean repo.
clean_patch() {
  svn cleanup
  svn revert -R *
  svn up
  curl "$1?format=raw" | patch -p0
}

alias tp=trac_patch
alias ctp=clean_patch

mod(){
  svn stat --ignore-externals | grep '^[^?X]'
}

movetrash() {
  if [ ! -d ~/.Trash ]; then
    mkdir ~/.Trash
  fi
  mv "$*" ~/.Trash
}

path() {
  echo $PATH | tr ':' '\n'
}

manpath() {
  echo $MANPATH | tr ':' '\n'
}

dir() {
  {
    ll "$@" | grep -E "^d" \
  &&
    ll "$@" | grep -E -v "^d|^total" \
  &&
    ll "$@" | grep -E "^total"
  } | $PAGER
}

clearcache() {
  if [ -d /tmp/cache ]; then
    /bin/rm -f /tmp/cache/{0,1,2,3}*.cache
    /bin/rm -f /tmp/cache/{4,5,6,7}*.cache
    /bin/rm -f /tmp/cache/{8,9,a,b}*.cache
    /bin/rm -f /tmp/cache/{c,d,e,f}*.cache
  elif [ -d /var/www/tmp/cache ]; then
    /bin/rm -f /var/www/tmp/cache/{0,1,2,3}*.cache
    /bin/rm -f /var/www/tmp/cache/{4,5,6,7}*.cache
    /bin/rm -f /var/www/tmp/cache/{8,9,a,b}*.cache
    /bin/rm -f /var/www/tmp/cache/{c,d,e,f}*.cache
  else
    echo "no cache directories exist"
  fi
}

sssh() {
  if ! type "autossh" > /dev/null; then
    (ssh "$@" -t 'tmux -2u attach || tmux -2u new') 2>/dev/null
  else
    (export AUTOSSH_PORT=0 && autossh "$@" -t 'tmux -2u attach || tmux -2u new') 2>/dev/null
  fi
}

mountpub() {
  sudo mount -t cifs -o username=ARI/darceneaux,rw,file_mode=0666,dir_mode=0777 \\\\10.10.10.12\\Public /mnt/Public
}

mountfr() {
  sudo mount -t cifs -o username=ARI/darceneaux,rw,file_mode=0666,dir_mode=0777 \\\\10.10.10.12\\Fundraising /mnt/Fundraising
}

mountvbox() {
  ssh -fNg -L 3306:127.0.0.1:3306 vbox # mysql tunnel
  ssh -fNg -L 5432:127.0.0.1:5432 vbox # postgres tunnel
  sshfs -C -o idmap=user,nonempty,transform_symlinks,allow_other,BatchMode=yes vbox:/var/www /var/www
}

# delete grep cache, not sure how to generalize it
dgc() {
  rm -rf $(grep -l '<!-- http://aynrandlexicon.com/lexicon/quote_of_the_day.html' /var/www/libraries/cache/*.cache)
  curl -I -s http://aynrandlexicon.com/lexicon/quote_of_the_day.html > /dev/null
}

tarlm() {
  if [ ! -f $1.access.$2.tgz ]; then
    sudo tar -zvcf $1.access.$2.tgz $1.access.$2*.log && sudo rm $1.access.$2*.log
  fi
  if [ ! -f $1.error.$2.tgz ]; then
    sudo tar -zvcf $1.error.$2.tgz $1.error.$2*.log && sudo rm $1.error.$2*.log
  fi
}

hgdiff() {
  vimdiff -c 'map q :qa!<CR>' <(hg cat "$1") "$1"
}

playtime() {
  if [ -x /usr/local/bin/soxi ]; then
    soxi -d "$@" 2>&1
  else
    echo "soxi is not installed"
  fi
}

dosass() {
  if [ "$#" -eq 1 ]; then
    sass --scss --compass -lC "$1" > "$(dirname "$1")/$(basename -s .scss "$1").css"
  else
    sass --scss --compass -lC "$1" > "$2"
  fi
}
