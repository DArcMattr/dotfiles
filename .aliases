# .aliases
# vim:ft=zsh:

alias ll='LC_COLLATE=C ls -AalFh'

dir() {
  {
    LL=$(ll "${@}")
    echo "${LL}" | awk '/^d/ {print $0}'
    echo "${LL}" | awk '! /^(d|total)/ {print $0}'
    echo "${LL}" | awk '/^total/ {print $0}'
  } | ${PAGER:-less}
}

if exa >/dev/null 2>&1; then
  alias ls='\exa --color=always'
  alias ll='LC_COLLATE=C ls -lFhg --all --all --color-scale --git --time-style=long-iso'
  dir() {
    LL=$(ll --group-directories-first "${@}")
    echo "${LL}" | ${PAGER:-less}
  }
elif ls --color=always -d . >/dev/null 2>&1; then
  alias ls='\ls --color=always'
elif ls -G -d . >/dev/null 2>&1; then # colorls is main system ls already
  alias ls='\ls -G'
elif colorls -G -d . >/dev/null 2>&1; then
  alias ls='\colorls -G'
else # Solaris or other *NIX
  alias ls='\ls'
fi

alias key='\man -k'
alias info='info --vi-keys'
alias sicp='racket -i -p neil/sicp -l xrepl'
alias agp='ag --pager=less'
alias venv='python -m venv'
alias python='python3'
#shellcheck disable=SC2139
alias svim='nvim -u ~/contrib/SpaceVim/init.vim'

# Suffix aliases

if alias -s >/dev/null 2>&1; then
  alias -s css=nvim
  alias -s md=nvim
  alias -s rst=nvim
  alias -s scss=nvim
  alias -s txt=nvim
fi

# Functions, used where aliases would break

cdl() {
  cd "${@}" && ll .
}

cdd() {
  cd "${@}" && dir .
}

echoerr() {
  printf "%s\n" "$*" >&2;
}

path() {
  echo "${PATH}" | tr ':' '\n'
}

catmd() {
  TMPFILE="$(mktemp -d)/index.html"

  echo "${TMPFILE}"

  pandoc -s -S --self-contained -c ~/.pandoc/buttondown.css \
    -t html5 -f markdown_phpextra "${@}" -o "${TMPFILE}"

  if command -v "${BROWSER}" >/dev/null 2>&1; then
    ${BROWSER} "${TMPFILE}"
  elif command -v "elinks" >/dev/null 2>&1; then
    elinks -force-html "file://${TMPFILE}"
  else
    lynx -force_html "file://${TMPFILE}"
  fi
}

hgdiff() {
  nvim -d -c 'map q :qa!<CR>' <(hg cat "$1") "$1"
}

# from https://unix.stackexchange.com/a/67541
pushterms() {
  infocmp -x | ssh -t "${@}" 'cat > "~/nuterm.info" && tic -x "~/$nuterm.info"'
}

sssh() {
  (autossh -t "${1}" 'source ${HOME}/dotfiles/.aliases && tmuxt') 2>/dev/null
}

superupdate() {
  if [ -z "$(apt >/dev/null 2>&1)" ]; then
    \sudo \sh -c " \
      \apt update && \
      \apt -y upgrade && \
      \apt -y full-upgrade && \
      \apt-get -y autoclean && \
      \apt -y autoremove && \
      \apt-get -y clean"
  elif [ -z "$(apt-get >/dev/null 2>&1)" ]; then
    \sudo \sh -c " \
      \apt-get update && \
      \apt-get -y upgrade && \
      \apt-get -y dist-upgrade && \
      \apt-get -y autoclean && \
      \apt-get -y autoremove && \
      \apt-get -y clean"
  elif [ -z "$(portsnap >/dev/null 2>&1)" ]; then # XXX rewrite as pkg
    \sudo \sh -c " \
      \portsnap fetch update && \
      \sudo \portmaster -aD && \
      \sudo \pkg2ng && \
      \sudo \freebsd-update fetch &&
      \sudo \freebsd-update install"
  else
    echoerr "This script is not configured for your system."
  fi
}

vman() {
  if [ -x /usr/bin/nvim ]; then
    if [ "${#}" -eq 2 ]; then
      /usr/bin/nvim -R "man://${2}(${1})"
    else
      /usr/bin/nvim -R "man://${1}"
    fi
  else
    /usr/bin/man "${@}"
  fi
}

tmuxt() {
  SESSION="$(echo "${USER}" | sed -e 's/[\. ]/_/g')"

  if tmux has-session -t "${SESSION}" >/dev/null 2>&1; then
    echo "Session ${SESSION} already exists, attaching"
  else
    tmux new-session -d -s "${SESSION}" -x "$(tput cols)" -y "$(tput lines)"

    if [ ! -n "${SSH_CLIENT}" ] && [ ! -n "${SSH_TTY}" ]; then
      tmux set-option -t "${SESSION}" status-position top
    fi

    . "${XDG_CONFIG_HOME}/tmux/.tmux.${HOST}.conf"

    tmux select-window -t "${SESSION}":0
  fi

  tmux attach-session -t "${SESSION}"
}

project-ctags() {
  FILEPATH="$(while [ ! -f '.editorconfig' ] && [ '/' != "${PWD}" ]; do cd .. ;done; [ / != "${PWD}"  ] && echo "${PWD}" || echo .)"

  for FILE in "$@"; do
    F="$(echo "${1}" | awk -F . '{print $NF}')"
    if [ ! -f "${1}" ]; then
      exit 0;
    fi

    case ${F} in
      php)
        TAG="${FILEPATH}/php.tags"
        ctags -a --fields=+aimlS --PHP-kinds=+cdfint-av -f "${TAG}" "${1}"
        STATUS=$?
        ;;

      js|mjs)
        TAG="${FILEPATH}/js.tags"
        ctags -a -f "${TAG}" "${1}"
        STATUS=$?
        ;;

      *)
        # no-op
        STATUS=0
        ;;
    esac

    if [ ${STATUS} -ne 0 ]; then
      exit ${STATUS}
    fi
  done
}
