# vim:ft=gitconfig
[user]
  name = David Arceneaux
  email = david@davidthemachine.org
[branch]
  sort = -committerdate
[color]
  ui = auto
  branch = auto
  diff = auto
  status = auto
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold
[color "status"]
  added = yellow
  changed = green
  untracked = cyan
[column]
  ui = auto
[commit]
  verbose = true
[core]
  attributesfile = ~/.config/git/attributes
  autocrlf = input
  eol = lf
  safecrlf = warn
  whitespace = trailing-space,space-before-tab,indent-with-non-tab
[diff]
  algorithm = patience
  mnemonicprefix = true
  renames = copies
  submodule = log
[diff "nodiff"]
  command = /bin/true
[difftool]
  prompt = false
  tool = difft
[difftool "icdiff"]
  cmd = icdiff --line-numbers --highlight $LOCAL $REMOTE
[difftool "vim"]
  cmd = nvim -d $LOCAL $REMOTE
[difftool "difft"]
  cmd = difft "$LOCAL" "$REMOTE"
[fetch]
  prune = true
  pruneTags = true
  all = true
[format]
  pretty = oneline
[help]
  autocorrect = prompt
[http]
  postBuffer = 524288000
[init]
  defaultBranch = main
  templatedir = "~/.config/git/template"
[merge]
  ff = false
  renormalize = true
  tool = fugitive
  keepBackup = false
[merge "ours"]
  name = "Keep ours merge"
  driver = true
[mergetool]
  prompt = false
  stat = true
  keepBackup = false
[mergetool "fugitive"]
  cmd = nvim -f -c "Gvdiffsplit!" "$MERGED"
[pager]
  diff =
  difftool = true
[pull]
  ff = only
  rebase = true
[push]
  autoSetupRemote = true
  default = current
  ff = only
  followTags = true
[rebase]
  autoSquash = true
  autoStash = true
  missingCommitsCheck = error
  updateRefs = true
[rerere]
  enabled = true
  autoupdate = true
[status]
  showUntrackedFiles = all
  submoduleSummary = true
[submodule]
  recurse = true
[tag]
  sort = version:refname
[url "git@github.com:"]
	insteadOf = https://github.com/
[alias]
  afetch = fetch --all --prune
  amend = commit --amend
  br = branch
  branchdiff = "!f() { git diff $(git oldest-ancestor ${1:-${GIT_DEFAULT_BRANCH}} ${2:-HEAD})..; }; f"
  branchdifftool = "!f() { git difftool $(git oldest-ancestor ${1:-${GIT_DEFAULT_BRANCH}} ${2:-HEAD})..; }; f"
  branches = branch -a
  branchlog = "!f() { git log $(git oldest-ancestor ${1:-${GIT_DEFAULT_BRANCH}} ${2:-HEAD})..; }; f"
  ci = commit
  co = checkout
  commandeer = "!f() { git push origin HEAD:${1:-'@'} --force; }; f"
  dt = difftool
  diffall = difftool --dir-diff
  diffr = "!f() { git diff "%1"^.."${1:-'@'}"; }; f"
  discard = checkout --
  dl = "!f() { git ll -1; }; f"
  dlc = diff --cached @^
  dno = diff --name-only
  dr = "!f() { git diff "${1:-'@'}"^.."${1:-'@'}"; }; f"
  filelog = log -u
  fl = log -u
  fpush = push --force-with-lease
  gr = grep -Ii
  gra = "!f() { A=$(pwd) && TOPLEVEL=$(git rev-parse --show-toplevel) && cd $TOPLEVEL && git grep --full-name -In ${1:-'@'} | xargs -0 -I{} echo $TOPLEVEL/{} && cd "${A}"; }; f"
  graph = log --graph -10 --branches --remotes --tags  --format=format:'%Cgreen%h %Cresetâ€¢ %<(75,trunc)%s (%cN, %ar) %Cred%d' --date-order
  grep = grep -Ii
  integrate = "!~/dotfiles/helpers/git-integrate"
  la = "!f() { git config -l | grep alias | cut -c 7-; }; f"
  lasttag = describe --tags --abbrev=0
  lasttagcheckout = "!f() { git checkout \"$(git describe --tags --abbrev=0)\"; }; f"
  lc = "!f() { git ll "${1:-'@'}"^.."${1:-'@'}"; }; f"
  ld = log --pretty=format:'%C(bold yellow)%h %C(bold white)%ad%C(red)%d %Creset%s%C(bold blue) [%cn]' --date=relative --decorate
  lds = log --pretty=format:'%C(bold yellow)%h %C(bold white)%ad%C(red)%d %Creset%s%C(bold blue) [%cn]' --date=short --decorate
  lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset' --abbrev-commit
  ll = log --pretty=format:'%C(yellow)%h%C(red)%d %Creset%s%C(blue) [%cn]' --decorate --numstat
  lnc = log --pretty=format:'%h %s [%cn]'
  lol = log --graph --decorate --oneline --all
  ls = log --pretty=format:'%C(yellow)%h%C(red)%d %Creset%s%C(blue) [%cn]' --decorate
  lt = describe --tags --abbrev=0
  l10 =  slog -n 10
  mdiff = "!~/dotfiles/helpers/git-mdiff"
  merge-dry-run = "!f() { git merge --no-commit --no-ff $@; git merge --abort; }; f"
  merge-to = "!f() { export tmp_branch=`git branch | grep '* ' | tr -d '* '` && git checkout $1 && git merge $tmp_branch && git checkout $tmp_branch; unset tmp_branch; }; f"
  mrc = "!f() { git mergetool && git rebase --continue; }; f"
  nevermind = !git reset --hard HEAD && git clean -d -f
  odiff = diff --no-ext-diff -p
  oldest-ancestor = !zsh -c 'diff --old-line-format= --new-line-format= <(git rev-list --first-parent \"${1:-master}\") <(git rev-list --first-parent \"${2:-HEAD}\") | head -1' -
  ours = "!f() { git co --ours $@ && git add $@; }; f"
  precommit = diff --cached --diff-algorithm=minimal -w
  prune = fetch --prune
  refresh = "!f() { git rm --cached -r . && git reset --hard; }; f"
  remotes = remove -v
  slog = log --graph --pretty=format:'commit: %C(bold red)%h%Creset %C(red)[%H]%Creset %C(bold magenta)%d %Creset%ndate: %C(bold yellow)%cd %Creset%C(yellow)%cr%Creset%nauthor: %C(bold blue)%an%Creset %C(blue)[%ae]%Creset%n%C(cyan)%s%n%Creset'
  ship = "!~/dotfiles/helpers/git-ship"
  st = status
  stash-all = stash save --include-untracked
  stashes = stash list
  sw = switch
  tags = tag
  theirs = "!f() { git co --theirs $@ && git add $@; }; f"
  undo = reset --soft HEAD^
  unmerged = diff --name-only --diff-filter=U
  unstage = reset -q HEAD
  up = "!f() { git remote update -p origin; git merge --ff-only @{u}; }; f"
  upr = "!f() { git pull && git submodule update --init --recursive; }; f"
  workprofile = "config user.email 'darceneaux@databank.com'"
